<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
	xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC"
	xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:activiti="http://activiti.org/bpmn" xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI"
	xmlns:jpdl2="urn:jbpm.org:jpdl-3.2" xmlns:jpdl1="urn:jbpm.org:jpdl-3.1"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="http://www.omg.org/spec/BPMN/20100524/MODEL http://www.omg.org/spec/BPMN/2.0/20100501/BPMN20.xsd"
	targetNamespace="http://www.jbpm.org/">
	<process isExecutable="true" id="ATD TD Article Word to XML to InDesign"
		name="ATD TD Article Word to XML to InDesign">


		<startEvent name="StartNode" id="StartNode" />

		<sequenceFlow id="getPIDAndNowString" sourceRef="StartNode"
			targetRef="Get_PID_and_Now_String" />

		<endEvent name="EndNode" id="EndNode" />



		<serviceTask id="DocX2XML_Transform" name="DocX2XML Transform"
			activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectAstdDocxToXmlActionHandler">

			<activiti:field name="styleMapUri"
				stringValue="rsuite:/res/plugin/astd-plugin/xslt/word2xml/article-style2tagmap.xml" />
			<activiti:field name="xsltUri"
				stringValue="rsuite:/res/plugin/astd-plugin/xslt/word2xml/docx2article.xsl" />
			<activiti:field name="outputPath" stringValue="${exportDir}" />
			<activiti:field name="resultFileName" stringValue="${sourceFileName}.xml" />
			<activiti:field name="docxMoId" expression="${docxMoId}" />
			<activiti:field name="xsltGraphicRenameUri"
				stringValue="" />
			<activiti:field name="graphicsPrefix" stringValue="" />
		</serviceTask>
		<sequenceFlow sourceRef="DocX2XML_Transform" targetRef="DOCX2XML_Error_" />




		<serviceTask id="XML_to_INCX" name="XML to INCX"
			activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectAstdXml2IcmlActionHandler">
			<activiti:field name="styleCatalogUri"
				stringValue="rsuite:/res/plugin/astd-plugin/xslt/tandd2indesign/tandd-dita-indesign-style-catalog.xml" />
			<activiti:field name="xsltUriFromWorkflow"
				stringValue="rsuite:/res/plugin/astd-plugin/xslt/tandd2indesign/tanddArticle2InDesign.xsl" />
			<activiti:field name="fileName" stringValue="${sourceFileName}" />
			<activiti:field name="xmlMoId" stringValue="${xmlMoId}" />
		</serviceTask>
		<sequenceFlow sourceRef="XML_to_INCX" targetRef="INX_Generation_Failure_" />







		<serviceTask id="Load_INX" name="Load INX"
			activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectLoadNonXmlByAliasHandler">
			<activiti:field name="alias" expression="${sourceFileName}.icml" />
			<activiti:field name="commitMessage" stringValue="Loaded by workflow" />
			<activiti:field name="parentMoId" expression="${articleCaMoId}" />
		</serviceTask>
		<sequenceFlow sourceRef="Load_INX" targetRef="determineExecSummary" />


		<exclusiveGateway id="determineExecSummary" name="Have No Exec Summary?"></exclusiveGateway>

		<sequenceFlow id="flowToMakeArticleCACurrent" sourceRef="determineExecSummary"
			targetRef="Make_Article_CA_Current">
			<conditionExpression xsi:type="tFormalExpression"><![CDATA[${empty incxExecSummaryFile}]]></conditionExpression>
		</sequenceFlow>

		<sequenceFlow id="flowToLoadExecSummary" sourceRef="determineExecSummary"
			targetRef="loadExecSummary">
		</sequenceFlow>


		<serviceTask id="loadExecSummary" name="Load Exec Summary"
			activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectLoadNonXmlByAliasHandler">
			<activiti:field name="alias" stringValue="${incxExecSummaryFile}" />
			<activiti:field name="fileToLoadFromWorkflow"
				stringValue="${incxExecSummaryPath}" />
			<activiti:field name="commitMessage"
				expression="Generated by ${rsuiteUserId} via workflow" />
			<activiti:field name="parentMoId" stringValue="${articleCaMoId}" />
		</serviceTask>

		<sequenceFlow id="flowFromLoadExecSummaryToMakeArticleCACurrent"
			sourceRef="loadExecSummary" targetRef="Make_Article_CA_Current"></sequenceFlow>









		<userTask id="Final_Edit" name="Final Edit (Managing Editor)"
			activiti:assignee="${rsuiteUserId}" activiti:candidateGroups="Managing_Editor">
				<activiti:taskListener event="complete"
				class="org.astd.rsuite.workflow.actions.leaving.rsuite5.UpdateWorkflowVariablesActionHandler" />
			
			<documentation>Document: ${fullFileName}</documentation>
		</userTask>
		<sequenceFlow sourceRef="Final_Edit" targetRef="getTax" />







		<serviceTask id="getTax" name="Get Tax"
			activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectAtdSetClassificationVarActionHandler">
			<activiti:field name="moAlias" expression="${sourceFileName}.xml" />
			<activiti:field name="targetVariableName" stringValue="articleClassification" />
		</serviceTask>

		<sequenceFlow id="fromGetTaxToDocx2XmlTransform"
			sourceRef="getTax" targetRef="DocX2XML_Transform"></sequenceFlow>







		<serviceTask id="Load_DOCX" name="Load DOCX"
			activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectLoadDocxActionHandler">





			<!--Custom variable; adjust action handlers as appropriate. regex={} -->
			<!--Custom variable; adjust action handlers as appropriate. xmlMoMatchExpressions={} -->
			<!--Custom variable; adjust action handlers as appropriate. layeredMetadataMatchExpressions={} -->
			<!--Custom variable; adjust action handlers as appropriate. moChunkMatchExpressions={} -->
			<!--Custom variable; adjust action handlers as appropriate. collection={} -->
			<!--Custom variable; adjust action handlers as appropriate. inputFolder={} -->
			<!--Custom variable; adjust action handlers as appropriate. notDelete={} -->
			<!--Custom variable; adjust action handlers as appropriate. creationPolicy={UpdateRepository} -->
			<!--Custom variable; adjust action handlers as appropriate. commitMessage={Loaded 
				via workflow} -->
			<!--Custom variable; adjust action handlers as appropriate. alwaysTreatAsXml={} -->
			<!--Custom variable; adjust action handlers as appropriate. neverTreatAsXml={} -->

		</serviceTask>
		<sequenceFlow sourceRef="Load_DOCX" targetRef="Create CAs for DOCX" />








		<userTask id="Begin_Design" name="Begin Design (Art Director)"
			activiti:assignee="${rsuiteUserId}" activiti:candidateGroups="Art_Director">
				<activiti:taskListener event="complete"
				class="org.astd.rsuite.workflow.actions.leaving.rsuite5.UpdateWorkflowVariablesActionHandler" />
			
			<documentation>Document: ${sourceFileName}.icml</documentation>
		</userTask>
		<sequenceFlow sourceRef="Begin_Design" targetRef="Review_First_Pages" />





		<serviceTask id="Validate_File_Name" name="ValidateFile Name"
			activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.AtdValidateFileNameActionHandler">
			<activiti:field name="allowedExtension" stringValue=".docx" />
			<activiti:field name="errorIfLocked" stringValue="true" />
			<activiti:field name="extensionErrorMessage"
				stringValue="Only MS Word 2007 or later allowed. Please open in MS Word 2007 and save as a .docx file." />
			<activiti:field name="errorIfExits" stringValue="true" />
		</serviceTask>



		<sequenceFlow sourceRef="Validate_File_Name" targetRef="loadErrorGateway" />

		<exclusiveGateway id="loadErrorGateway" name="Load Error?" />





		<sequenceFlow sourceRef="loadErrorGateway" targetRef="Error_Alert">
			<conditionExpression xsi:type="tFormalExpression"><![CDATA[${VALIDATION_MSGS != null}]]></conditionExpression>
		</sequenceFlow>
		<sequenceFlow sourceRef="loadErrorGateway" targetRef="Load_DOCX">
			<conditionExpression xsi:type="tFormalExpression"><![CDATA[${VALIDATION_MSGS == null}]]></conditionExpression>
		</sequenceFlow>




		<userTask id="Error_Alert" name="Error Alert (Managing_Editor)"
			activiti:assignee="${rsuiteUserId}" activiti:candidateGroups="Managing_Editor">
			<documentation>${VALIDATION_MSGS}</documentation>

		</userTask>


		<sequenceFlow sourceRef="Error_Alert" targetRef="EndNode" />

		<serviceTask id="Create CAs for DOCX" name="Create CAs for DOCX"
			activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectCreateCAsTandDActionHandler" />
		
			<sequenceFlow sourceRef="Create CAs for DOCX"
				targetRef="Set_Article_LM" />




			<userTask id="Edit_MS_Word" name="TD Edit MS Word (Managing Editor)"
				activiti:assignee="${rsuiteUserId}" activiti:candidateGroups="Managing_Editor">
				<activiti:taskListener event="complete"
				class="org.astd.rsuite.workflow.actions.leaving.rsuite5.UpdateWorkflowVariablesActionHandler" />
			
				<documentation>Document: ${fullFileName}</documentation>
			</userTask>
			<sequenceFlow sourceRef="Edit_MS_Word" targetRef="editorEditMSWord" />


			<userTask id="editorEditMSWord" name="TD Edit MS Word (Editor)"
				activiti:assignee="${rsuiteUserId}" activiti:candidateGroups="Editor">
				<activiti:taskListener event="complete"
				class="org.astd.rsuite.workflow.actions.leaving.rsuite5.UpdateWorkflowVariablesActionHandler" />
			
				<documentation>Document: ${fullFileName}</documentation>
			</userTask>
			<sequenceFlow sourceRef="editorEditMSWord" targetRef="Final_Edit" />


			<userTask id="Review_First_Pages" name="Review First Pages (Managing Editor)"
				activiti:assignee="${rsuiteUserId}" activiti:candidateGroups="Managing_Editor">
				<activiti:taskListener event="complete"
				class="org.astd.rsuite.workflow.actions.leaving.rsuite5.UpdateWorkflowVariablesActionHandler" />
			
				<documentation>Document: ${sourceFileName}.icml</documentation>
			</userTask>
			<sequenceFlow sourceRef="Review_First_Pages" targetRef="gateway_Review_First_Pages" />
			<exclusiveGateway id="gateway_Review_First_Pages"
				name="Gateway Review First Pages" />
			<sequenceFlow sourceRef="gateway_Review_First_Pages"
				targetRef="Set_Minor_text_changes">
				<conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "Set_Minor_text_changes"}]]></conditionExpression>
			</sequenceFlow>
			<sequenceFlow sourceRef="gateway_Review_First_Pages"
				targetRef="Set_significant_changes">
				<conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "Set_significant_changes"}]]></conditionExpression>
			</sequenceFlow>
			<sequenceFlow sourceRef="gateway_Review_First_Pages"
				targetRef="Set_No_detail_changes">
				<conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "Set_No_detail_changes"}]]></conditionExpression>
			</sequenceFlow>
			<userTask id="Make_First_Corrections" name="Make First Corrections (Art Director)"
				activiti:assignee="${rsuiteUserId}" activiti:candidateGroups="Art_Director">
				<activiti:taskListener event="complete"
				class="org.astd.rsuite.workflow.actions.leaving.rsuite5.UpdateWorkflowVariablesActionHandler" />
			
				<documentation>Document: ${sourceFileName}.icml Detail: ${detail}
				</documentation>
			</userTask>
			<sequenceFlow sourceRef="Make_First_Corrections"
				targetRef="Review_Dummy" />
			<userTask id="Review_Dummy" name="Review Dummy (Managing Editor)"
				activiti:assignee="${rsuiteUserId}" activiti:candidateGroups="Managing_Editor">
				<activiti:taskListener event="complete"
				class="org.astd.rsuite.workflow.actions.leaving.rsuite5.UpdateWorkflowVariablesActionHandler" />
			
				<documentation>${sourceFileName}.icml</documentation>
			</userTask>
			<sequenceFlow sourceRef="Review_Dummy" targetRef="gateway_Review_Dummy" />
			<exclusiveGateway id="gateway_Review_Dummy" name="Gateway Review Dummy" />
			<sequenceFlow sourceRef="gateway_Review_Dummy"
				targetRef="Set_No_Detail_Changes_2">
				<conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "Set_No_Detail_Changes_2"}]]></conditionExpression>
			</sequenceFlow>
			<sequenceFlow sourceRef="gateway_Review_Dummy"
				targetRef="Set_Minor_text_changes_2">
				<conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "Set_Minor_text_changes_2"}]]></conditionExpression>
			</sequenceFlow>
			<sequenceFlow sourceRef="gateway_Review_Dummy"
				targetRef="Set_signficant_text_changes_2">
				<conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "Set_signficant_text_changes_2"}]]></conditionExpression>
			</sequenceFlow>
			<userTask id="Create_Dummy" name="Create Dummy (Art Director)"
				activiti:assignee="${rsuiteUserId}" activiti:candidateGroups="Art_Director">
				<activiti:taskListener event="complete"
				class="org.astd.rsuite.workflow.actions.leaving.rsuite5.UpdateWorkflowVariablesActionHandler" />
			
				<documentation>Document: ${sourceFileName}.icml Detail: ${detail}
				</documentation>
			</userTask>
			<sequenceFlow sourceRef="Create_Dummy" targetRef="Approve_Final_Dummy" />
			<userTask id="Approve_Final_Dummy" name="Approve Final Dummy (Managing Editor)"
				activiti:assignee="${rsuiteUserId}" activiti:candidateGroups="Managing_Editor">
				<activiti:taskListener event="complete"
				class="org.astd.rsuite.workflow.actions.leaving.rsuite5.UpdateWorkflowVariablesActionHandler" />
			
				<documentation>Document: ${sourceFileName}</documentation>
			</userTask>
			<sequenceFlow sourceRef="Approve_Final_Dummy" targetRef="gateway_Approve_Final_Dummy" />
			<exclusiveGateway id="gateway_Approve_Final_Dummy" />
			<sequenceFlow sourceRef="gateway_Approve_Final_Dummy"
				targetRef="Prep_for_Printer">
				<conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "Prep_for_Printer"}]]></conditionExpression>
			</sequenceFlow>
			<sequenceFlow sourceRef="gateway_Approve_Final_Dummy"
				targetRef="Review_Dummy">
				<conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "Review_Dummy"}]]></conditionExpression>
			</sequenceFlow>
			<userTask id="Prep_for_Printer" name="Prep for Printer (Art Director)"
				activiti:assignee="${rsuiteUserId}" activiti:candidateGroups="Art_Director">
				<activiti:taskListener event="complete"
				class="org.astd.rsuite.workflow.actions.leaving.rsuite5.UpdateWorkflowVariablesActionHandler" />
			
				<documentation>Document: ${sourceFileName}</documentation>
			</userTask>
			<sequenceFlow sourceRef="Prep_for_Printer" targetRef="Approve_Blueline" />
			<userTask id="Approve_Blueline" name="Approve Blueline (Managing Editor)"
				activiti:assignee="${rsuiteUserId}" activiti:candidateGroups="Managing_Editor">
				<activiti:taskListener event="complete"
				class="org.astd.rsuite.workflow.actions.leaving.rsuite5.UpdateWorkflowVariablesActionHandler" />
			
				<documentation>Document: ${sourceFileName}</documentation>
			</userTask>
			<sequenceFlow sourceRef="Approve_Blueline" targetRef="exportArticlePDF" />






			<serviceTask id="Set_No_Detail_Changes_2" name="Set No Detail Changes 2"

				activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectSetGlobalVariablesActionHandler">
				<activiti:field name="variableNames" stringValue="detail" />
				<activiti:field name="values" stringValue="no text changes" />
				<!-- stringValue="${astd.base.export.dir}${astd.xml.export.dir}/${pId};${astd.export.share}${astd.xml.export.dir}/${pId}" 
					/> -->
				<!--Custom variable; adjust action handlers as appropriate. variableNames={detail} -->
				<!--Custom variable; adjust action handlers as appropriate. values={no 
					text changes} -->
			</serviceTask>
			<sequenceFlow sourceRef="Set_No_Detail_Changes_2"
				targetRef="Create_Dummy" />




			<serviceTask id="Docx_to_XML_after_Dummy_Review" name="Docx to XML after Dummy Review"
				activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectAstdDocxToXmlActionHandler">
				<activiti:field name="styleMapUri"
					stringValue="rsuite:/res/plugin/astd-plugin/xslt/word2xml/article-style2tagmap.xml" />
				<activiti:field name="xsltUri"
					stringValue="rsuite:/res/plugin/astd-plugin/xslt/word2xml/docx2article.xsl" />
				<activiti:field name="outputPath" stringValue="${exportDir}" />
				<activiti:field name="resultFileName" stringValue="${sourceFileName}.xml" />
				<activiti:field name="docxMoId" expression="${docxMoId}" />
				<activiti:field name="xsltGraphicRenameUri"
					stringValue="" />
				<activiti:field name="graphicsPrefix" stringValue="" />

				<!--Custom variable; adjust action handlers as appropriate. styleMapUri={rsuite:/res/plugin/astd/xslt/word2xml/article-style2tagmap.xml} -->
				<!--Custom variable; adjust action handlers as appropriate. xsltUri={rsuite:/res/plugin/astd/xslt/word2xml/docx2article.xsl} -->
				<!--Custom variable; adjust action handlers as appropriate. outputPath={${exportDir}} -->
				<!--Custom variable; adjust action handlers as appropriate. docxMoId={${docxMoId}} -->
				<!--Custom variable; adjust action handlers as appropriate. resultFileName={${sourceFileName}.xml} -->
			</serviceTask>
			<sequenceFlow sourceRef="Docx_to_XML_after_Dummy_Review"
				targetRef="Update_XML_after_Dummy_Review" />






			<serviceTask id="Set_Minor_text_changes_2" name="Set Minor text_changes 2"
				activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectSetGlobalVariablesActionHandler">
				<activiti:field name="variableNames" stringValue="detail" />
				<activiti:field name="values" stringValue="minor text changes" />

				<!--Custom variable; adjust action handlers as appropriate. variableNames={detail} -->
				<!--Custom variable; adjust action handlers as appropriate. values={minor 
					text changes} -->
			</serviceTask>
			<sequenceFlow sourceRef="Set_Minor_text_changes_2"
				targetRef="Docx_to_XML_after_Dummy_Review" />





			<serviceTask id="Set_signficant_text_changes_2" name="Set signficant text changes 2"
				activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectSetGlobalVariablesActionHandler">
				<activiti:field name="variableNames" stringValue="detail" />
				<activiti:field name="values" stringValue="significant text changes" />

				<!--Custom variable; adjust action handlers as appropriate. variableNames={detail} -->
				<!--Custom variable; adjust action handlers as appropriate. values={significant 
					text changes} -->
			</serviceTask>
			<sequenceFlow sourceRef="Set_signficant_text_changes_2"
				targetRef="Docx_to_XML_after_Dummy_Review" />
			<exclusiveGateway id="If_significant_changes_" />
			<sequenceFlow sourceRef="If_significant_changes_"
				targetRef="XML_to_INCX_3">
				<conditionExpression xsi:type="tFormalExpression"><![CDATA[${detail=='significant text changes' == true}]]></conditionExpression>
			</sequenceFlow>
			<sequenceFlow sourceRef="If_significant_changes_"
				targetRef="Make_Article_CA_Current_3">
				<conditionExpression xsi:type="tFormalExpression"><![CDATA[${detail=='significant text changes' == false}]]></conditionExpression>
			</sequenceFlow>



			<serviceTask id="XML_to_INCX_3" name="XML to INCX 3"
				activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectAstdXml2IncxActionHandler">
				<activiti:field name="styleCatalogUri"
					stringValue="rsuite:/res/plugin/astd-plugin/xslt/tandd2indesign/tandd-dita-indesign-style-catalog.xml" />
				<activiti:field name="xsltUriFromWorkflow"
					stringValue="rsuite:/res/plugin/astd-plugin/xslt/tandd2indesign/tanddArticle2InDesign.xsl" />
				<activiti:field name="fileName" stringValue="${sourceFileName}" />
				<activiti:field name="xmlMoId" stringValue="${xmlMoId}" />

				<!--Custom variable; adjust action handlers as appropriate. styleCatalogUri={rsuite:/res/plugin/astd/xslt/tandd2indesign/tandd-dita-indesign-style-catalog.xml} -->
				<!--Custom variable; adjust action handlers as appropriate. xsltUri={rsuite:/res/plugin/astd/xslt/tandd2indesign/tanddArticle2InDesign.xsl} -->
				<!--Custom variable; adjust action handlers as appropriate. fileName={${sourceFileName}} -->
				<!--Custom variable; adjust action handlers as appropriate. xmlMoId={${xmlMoId}} -->
			</serviceTask>
			<sequenceFlow sourceRef="XML_to_INCX_3" targetRef="Load_INCX_3" />




			<serviceTask id="Load_INCX_3" name="Load INCX 3"
				activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectLoadNonXmlByAliasHandler">
				<activiti:field name="alias" expression="${sourceFileName}.icml" />
				<activiti:field name="commitMessage" stringValue="Loaded by workflow" />
				<activiti:field name="parentMoId" expression="${articleCaMoId}" />
				<!--Custom variable; adjust action handlers as appropriate. commitMessage={Regenerated 
					from XML to reflect ${detail} following review dummy task} -->
			</serviceTask>
			<sequenceFlow sourceRef="Load_INCX_3" targetRef="Make_Article_CA_Current_3" />




			<serviceTask id="Docx2DITA_2" name="Docx2DITA 2"
				activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectAstdDocxToXmlActionHandler">
				<activiti:field name="styleMapUri"
					stringValue="rsuite:/res/plugin/astd-plugin/xslt/word2xml/article-style2tagmap.xml" />
				<activiti:field name="xsltUri"
					stringValue="rsuite:/res/plugin/astd-plugin/xslt/word2xml/docx2article.xsl" />
				<activiti:field name="outputPath" stringValue="${exportDir}" />
				<activiti:field name="resultFileName" stringValue="${sourceFileName}.xml" />
				<activiti:field name="docxMoId" expression="${docxMoId}" />
				<activiti:field name="xsltGraphicRenameUri"
					stringValue="" />
				<activiti:field name="graphicsPrefix" stringValue="" />
				<!--Custom variable; adjust action handlers as appropriate. styleMapUri={rsuite:/res/plugin/astd/xslt/word2xml/article-style2tagmap.xml} -->
				<!--Custom variable; adjust action handlers as appropriate. xsltUri={rsuite:/res/plugin/astd/xslt/word2xml/docx2article.xsl} -->
				<!--Custom variable; adjust action handlers as appropriate. outputPath={${exportDir}} -->
				<!--Custom variable; adjust action handlers as appropriate. docxMoId={${docxMoId}} -->
				<!--Custom variable; adjust action handlers as appropriate. resultFileName={${sourceFileName}.xml} -->
			</serviceTask>
			<sequenceFlow sourceRef="Docx2DITA_2" targetRef="Update_XML_after_first_pages" />



			<serviceTask id="XML_to_INCX_2" name="XML to INCX 2"
				activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectAstdXml2IncxActionHandler">
				<activiti:field name="styleCatalogUri"
					stringValue="rsuite:/res/plugin/astd-plugin/xslt/tandd2indesign/tandd-dita-indesign-style-catalog.xml" />
				<activiti:field name="xsltUriFromWorkflow"
					stringValue="rsuite:/res/plugin/astd-plugin/xslt/tandd2indesign/tanddArticle2InDesign.xsl" />
				<activiti:field name="fileName" stringValue="${sourceFileName}" />
				<activiti:field name="xmlMoId" stringValue="${xmlMoId}" />
				<!--Custom variable; adjust action handlers as appropriate. styleCatalogUri={rsuite:/res/plugin/astd/xslt/tandd2indesign/tandd-dita-indesign-style-catalog.xml} -->
				<!--Custom variable; adjust action handlers as appropriate. xsltUri={rsuite:/res/plugin/astd/xslt/tandd2indesign/tanddArticle2InDesign.xsl} -->
				<!--Custom variable; adjust action handlers as appropriate. fileName={${sourceFileName}} -->
				<!--Custom variable; adjust action handlers as appropriate. xmlMoId={${xmlMoId}} -->
			</serviceTask>
			<sequenceFlow sourceRef="XML_to_INCX_2" targetRef="Load_INCX_2" />



			<serviceTask id="Load_INCX_2" name="Load INCX 2"
				activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectLoadNonXmlByAliasHandler">
				<activiti:field name="alias" expression="${sourceFileName}.icml" />
				<activiti:field name="commitMessage" stringValue="Loaded by workflow" />
				<activiti:field name="parentMoId" expression="${articleCaMoId}" />
				<!--Custom variable; adjust action handlers as appropriate. commitMessage={Regenerated 
					to reflect ${detail} following review first pages task} -->
			</serviceTask>
			<sequenceFlow sourceRef="Load_INCX_2" targetRef="Make_Article_CA_Current_2" />
			<exclusiveGateway id="Is_significant_" />
			<sequenceFlow sourceRef="Is_significant_" targetRef="XML_to_INCX_2">
				<conditionExpression xsi:type="tFormalExpression"><![CDATA[${detail=='significant text changes' == true}]]></conditionExpression>
			</sequenceFlow>
			<sequenceFlow sourceRef="Is_significant_" targetRef="Make_Article_CA_Current_2">
				<conditionExpression xsi:type="tFormalExpression"><![CDATA[${detail=='significant text changes' == false}]]></conditionExpression>
			</sequenceFlow>





			<serviceTask id="Set_significant_changes" name="Set significant changes"

				activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectSetGlobalVariablesActionHandler">
				<activiti:field name="variableNames" stringValue="detail" />
				<activiti:field name="values" stringValue="significant text changes" />
				<!--Custom variable; adjust action handlers as appropriate. variableNames={detail} -->
				<!--Custom variable; adjust action handlers as appropriate. values={significant 
					text changes} -->
			</serviceTask>
			<sequenceFlow sourceRef="Set_significant_changes"
				targetRef="Docx2DITA_2" />





			<serviceTask id="Set_Minor_text_changes" name="Set Minor text changes"
				activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectSetGlobalVariablesActionHandler">
				<activiti:field name="variableNames" stringValue="detail" />
				<activiti:field name="values" stringValue="minor text changes" />
				<!--Custom variable; adjust action handlers as appropriate. variableNames={detail} -->
				<!--Custom variable; adjust action handlers as appropriate. values={minor 
					text changes} -->
			</serviceTask>
			<sequenceFlow sourceRef="Set_Minor_text_changes"
				targetRef="Docx2DITA_2" />




			<serviceTask id="Set_No_detail_changes" name="Set No detail changes"
				activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectSetGlobalVariablesActionHandler">
				<activiti:field name="variableNames" stringValue="detail" />
				<activiti:field name="values" stringValue="no text changes" />
				<!--Custom variable; adjust action handlers as appropriate. variableNames={detail} -->
				<!--Custom variable; adjust action handlers as appropriate. values={no 
					text changes} -->
			</serviceTask>
			<sequenceFlow sourceRef="Set_No_detail_changes"
				targetRef="Make_First_Corrections" />


			<exclusiveGateway id="DOCX2XML_Error_" name="DOCX2XML Error ?"></exclusiveGateway>
			<sequenceFlow sourceRef="DOCX2XML_Error_" targetRef="Word_to_XML_Error">
				<conditionExpression xsi:type="tFormalExpression"><![CDATA[${EXCEPTION_OCCUR == true}]]></conditionExpression>
			</sequenceFlow>
			<sequenceFlow sourceRef="DOCX2XML_Error_" targetRef="Import_DITA">
				<conditionExpression xsi:type="tFormalExpression"><![CDATA[${EXCEPTION_OCCUR == false}]]></conditionExpression>
			</sequenceFlow>
			<userTask id="Word_to_XML_Error"

				name="Error Alert: Article Workflow: Word to XML Failed (Managing Editor)"
				activiti:assignee="${rsuiteUserId}" activiti:candidateGroups="Managing_Editor">
				<documentation>"#{moDisplayName}: Generation of XML from DOCX
					failed:
					#{exceptionMessage}
					&lt;br/&gt;See conversion report &lt;a
					href='/rsuite/rest/v1/report/generated/#{xformReportId}?skey=RSUITE-SESSION-KEY'
					target='_xformReport'&gt;#{xformReportFileName}&lt;a/&gt;"
				</documentation>

			</userTask>
			<sequenceFlow sourceRef="Word_to_XML_Error" targetRef="EndNode" />
			<exclusiveGateway id="INX_Generation_Failure_" name="INX Generation Failure" />
			<sequenceFlow sourceRef="INX_Generation_Failure_"
				targetRef="Load_INX">
				<conditionExpression xsi:type="tFormalExpression"><![CDATA[${EXCEPTION_OCCUR == false}]]></conditionExpression>
			</sequenceFlow>
			<sequenceFlow sourceRef="INX_Generation_Failure_"
				targetRef="INX_Generation_Error">
				<conditionExpression xsi:type="tFormalExpression"><![CDATA[${EXCEPTION_OCCUR == true}]]></conditionExpression>
			</sequenceFlow>
			<userTask id="INX_Generation_Error" name="INX Generation Error (Managing Editor)"
				activiti:assignee="${rsuiteUserId}" activiti:candidateGroups="Managing_Editor">
				<documentation>Failed to generate INX from article ${fullFileName}
					&lt;br/&gt;See conversion report &lt;a
					href='/rsuite/rest/v1/report/generated/${xformReportId}?skey=RSUITE-SESSION-KEY'
					target='_xformReport'&gt;${xformReportFileName}&lt;a/&gt;
				</documentation>
			</userTask>
			<sequenceFlow sourceRef="INX_Generation_Error"
				targetRef="gateway_INX_Generation_Error" />
			<exclusiveGateway id="gateway_INX_Generation_Error" />
			<sequenceFlow sourceRef="gateway_INX_Generation_Error"
				targetRef="EndNode">
				<conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "EndNode"}]]></conditionExpression>
			</sequenceFlow>
			<sequenceFlow sourceRef="gateway_INX_Generation_Error"
				targetRef="Final_Edit">
				<conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "Final_Edit"}]]></conditionExpression>
			</sequenceFlow>




			<serviceTask id="Update_XML_after_first_pages" name="Update XML after first pages"
				activiti:class="com.reallysi.rsuite.workflow.actions.TopicImporterActionHandler">
				<activiti:field name="topicPath"
					stringValue="${exportDir}/${sourceFileName}/${sourceFileName}.xml" />
				<activiti:field name="parentCaId" stringValue="${articleCaMoId}" />
				<activiti:field name="commitMessage"
					stringValue="Loaded via workflow from hotfolder" />
				<activiti:field name="importedMoListVarname"
					stringValue="xmlMoId" />
				<activiti:field name="topicContainerName"
					stringValue="media" />
				<!--Custom variable; adjust action handlers as appropriate. topicPath={${exportDir}/${sourceFileName}/${sourceFileName}.xml} -->
				<!--Custom variable; adjust action handlers as appropriate. parentCaId={${articleCaMoId}} -->
				<!--Custom variable; adjust action handlers as appropriate. commitMessage={Regenerated 
					to reflect ${detail} after first pages review} -->
				<!--Custom variable; adjust action handlers as appropriate. importedMoListVarname={xmlMoId} -->
				<!--Custom variable; adjust action handlers as appropriate. topicContainerName={media} -->
			</serviceTask>
			<sequenceFlow sourceRef="Update_XML_after_first_pages"
				targetRef="Is_significant_" />




			<serviceTask id="Update_XML_after_Dummy_Review" name="Update XML after Dummy Review"
				activiti:class="com.reallysi.rsuite.workflow.actions.TopicImporterActionHandler">
				<activiti:field name="topicPath"
					stringValue="${exportDir}/${sourceFileName}/${sourceFileName}.xml" />
				<activiti:field name="parentCaId" stringValue="${articleCaMoId}" />
				<activiti:field name="commitMessage"
					stringValue="Loaded via workflow from hotfolder" />
				<activiti:field name="importedMoListVarname"
					stringValue="xmlMoId" />
				<activiti:field name="topicContainerName"
					stringValue="media" />
				<!--Custom variable; adjust action handlers as appropriate. topicPath={${exportDir}/${sourceFileName}/${sourceFileName}.xml} -->
				<!--Custom variable; adjust action handlers as appropriate. parentCaId={${articleCaMoId}} -->
				<!--Custom variable; adjust action handlers as appropriate. commitMessage={Regenerated 
					to reflect ${detail} after dummy review} -->
				<!--Custom variable; adjust action handlers as appropriate. importedMoListVarname={xmlMoId} -->
				<!--Custom variable; adjust action handlers as appropriate. topicContainerName={media} -->
			</serviceTask>
			<sequenceFlow sourceRef="Update_XML_after_Dummy_Review"
				targetRef="If_significant_changes_" />

			<exclusiveGateway id="setTaxFailed?" name="Set Tax Failed?" />
			<sequenceFlow sourceRef="setTaxFailed?" targetRef="Load_of_DITA_Failed">
				<conditionExpression xsi:type="tFormalExpression"><![CDATA[${EXCEPTION_OCCUR == true}]]></conditionExpression>
			</sequenceFlow>
			<sequenceFlow sourceRef="setTaxFailed?" targetRef="XML_to_INCX">
				<conditionExpression xsi:type="tFormalExpression"><![CDATA[${EXCEPTION_OCCUR==false}]]></conditionExpression>
			</sequenceFlow>
			<userTask id="Load_of_DITA_Failed" name="Load of DITA Failed (RSuite Administrator)"
				activiti:candidateGroups="RSuiteAdministrator">
				<documentation>Load of DITA XML from DOCX ${fullFileName} failed:
					${exceptionMessage}</documentation>
			</userTask>
			<sequenceFlow sourceRef="Load_of_DITA_Failed" targetRef="gateway_Load_of_DITA_Failed" />
			<exclusiveGateway id="gateway_Load_of_DITA_Failed" />
			<sequenceFlow sourceRef="gateway_Load_of_DITA_Failed"
				targetRef="EndNode">
				<conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "EndNode"}]]></conditionExpression>
			</sequenceFlow>
			<sequenceFlow sourceRef="gateway_Load_of_DITA_Failed"
				targetRef="DocX2XML_Transform">
				<conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "DocX2XML_Transform"}]]></conditionExpression>
			</sequenceFlow>
			<userTask id="Workflow_Complete" name="Workflow Complete (Managing Editor)"
				activiti:assignee="${rsuiteUserId}" activiti:candidateGroups="Managing_Editor">
				<activiti:taskListener event="complete"
				class="org.astd.rsuite.workflow.actions.leaving.rsuite5.UpdateWorkflowVariablesActionHandler" />
			
				<documentation>Article ${sourceFileName}: Bluelines have been
					approved. Workflow is complete.</documentation>
			</userTask>
			<sequenceFlow sourceRef="Workflow_Complete" targetRef="EndNode" />




			<serviceTask id="Set_Variables_From_Properties" name="Ensure Map"
				activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectSetGlobalVariablesActionHandler">
				<activiti:field name="variableNames" stringValue="exportDir;sharedExportDir" />
				<activiti:field name="values"
					stringValue="${astd.base.export.dir}${astd.xml.export.dir}/${pId};${astd.export.share}${astd.xml.export.dir}/${pId}" />
				<!--Custom variable; adjust action handlers as appropriate. variableNames={exportDir;sharedExportDir} -->
				<!--Custom variable; adjust action handlers as appropriate. values={${astd.base.export.dir}${astd.xml.export.dir}/${pId};${astd.export.share}${astd.xml.export.dir}/${pId}} -->
			</serviceTask>
			<sequenceFlow sourceRef="Set_Variables_From_Properties"
				targetRef="Validate_File_Name" />



			<serviceTask id="Get_PID_and_Now_String" name="Set PID and Date Now"
				activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectSetDynamicValuesToVariablesActionHandler">
				<activiti:field name="variableNames" stringValue="pId;nowString" />
				<activiti:field name="items" stringValue="pId;nowString" />
				<!--Custom variable; adjust action handlers as appropriate. variableNames={pId;nowString} -->
				<!--Custom variable; adjust action handlers as appropriate. items={pId;nowString} -->
			</serviceTask>
			<sequenceFlow sourceRef="Get_PID_and_Now_String"
				targetRef="Set_Variables_From_Properties" />











			<serviceTask id="Make_Article_CA_Current" name="Make Article CA Current"
				activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectSetWorkflowMoListFromVariableHandler">
				<activiti:field name="moSpecifyingVariableName"
					stringValue="articleCaMoId" />
				<!--Custom variable; adjust action handlers as appropriate. moSpecifyingVariableName={articleCaMoId} -->
			</serviceTask>
			<sequenceFlow sourceRef="Make_Article_CA_Current"
				targetRef="Begin_Design" />



			<serviceTask id="Make_Article_CA_Current_2" name="Make Article CA Current 2"
				activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectSetWorkflowMoListFromVariableHandler">
				<activiti:field name="moSpecifyingVariableName"
					stringValue="articleCaMoId" />
				<!--Custom variable; adjust action handlers as appropriate. moSpecifyingVariableName={articleCaMoId} -->
			</serviceTask>
			<sequenceFlow sourceRef="Make_Article_CA_Current_2"
				targetRef="Make_First_Corrections" />



			<serviceTask id="Make_Article_CA_Current_3" name="Make Article CA Current 3"
				activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectSetWorkflowMoListFromVariableHandler">
				<activiti:field name="moSpecifyingVariableName"
					stringValue="articleCaMoId" />
				<!--Custom variable; adjust action handlers as appropriate. moSpecifyingVariableName={articleCaMoId} -->
			</serviceTask>
			<sequenceFlow sourceRef="Make_Article_CA_Current_3"
				targetRef="Create_Dummy" />
			<!--  <sequenceFlow sourceRef="Create_Dummy" targetRef="Clear_PDF_Exception_Status" />  -->


			<serviceTask id="Make_XML_Current" name="Make XML Current"
				activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectSetWorkflowMoListFromVariableHandler">
				<activiti:field name="moSpecifyingVariableName"
					stringValue="xmlMoId" />
				<!--Custom variable; adjust action handlers as appropriate. moSpecifyingVariableName={xmlMoId} -->
			</serviceTask>
			<sequenceFlow sourceRef="Make_XML_Current" targetRef="ExportArticleHTML" />


			<callActivity id="ExportArticleHTML" name="Export Article HTML"
				calledElement="ATD Export Article HTML">
				<extensionElements>
					<activiti:in source="rsuite:contents" target="rsuite contents" />
 				    <activiti:in source="rsuite:contents" target="rsuite:contents" ></activiti:in>
					<activiti:in source="articleCaMoId" target="parentMoId" />
				</extensionElements>
			</callActivity>


			<sequenceFlow id="flowToClearHtmlExportStatus"
				sourceRef="ExportArticleHTML" targetRef="Clear_HTML_Export_Status" />


			<serviceTask id="Restore_Article_CA_After_Exports" name="Restore Article CA After Exports"

				activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectSetWorkflowMoListFromVariableHandler">
				<activiti:field name="moSpecifyingVariableName"
					stringValue="articleCaMoId" />
				<!--Custom variable; adjust action handlers as appropriate. moSpecifyingVariableName={articleCaMoId} -->
			</serviceTask>
			<sequenceFlow sourceRef="Restore_Article_CA_After_Exports"
				targetRef="Workflow_Complete" />

			<!-- <sequenceFlow sourceRef="Workflow_Complete" targetRef="Clear_HTML_Export_Status"/> -->




			<serviceTask id="Import_DITA" name="Import DITA"
				activiti:class="com.reallysi.rsuite.workflow.actions.TopicImporterActionHandler">
				<activiti:field name="topicPath"
					stringValue="${exportDir}/${sourceFileName}/${sourceFileName}.xml" />
				<activiti:field name="parentCaId" stringValue="${articleCaMoId}" />
				<activiti:field name="commitMessage"
					stringValue="Loaded via workflow from hotfolder" />
				<activiti:field name="importedMoListVarname"
					stringValue="xmlMoId" />
				<activiti:field name="topicContainerName"
					stringValue="media" />
			</serviceTask>






			<activiti:field name="topicContainerName" stringValue="media" />
			<!--Custom variable; adjust action handlers as appropriate. topicPath={${exportDir}/${sourceFileName}/${sourceFileName}.xml} -->
			<!--Custom variable; adjust action handlers as appropriate. parentCaId={${articleCaMoId}} -->
			<!--Custom variable; adjust action handlers as appropriate. commitMessage={Loaded 
				via workflow from hotfolder} -->
			<!--Custom variable; adjust action handlers as appropriate. importedMoListVarname={xmlMoId} -->
			<!--Custom variable; adjust action handlers as appropriate. topicContainerName={media} -->
			<sequenceFlow sourceRef="Import_DITA" targetRef="setTax" />



			<serviceTask id="setTax" name="Set Tax"
				activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectAstdSetMoClassification">
				<activiti:field name="moAlias" stringValue="${sourceFileName}.xml" />
				<activiti:field name="data" stringValue="${articleClassification}" />
			</serviceTask>

			<sequenceFlow id="fromsetTaxToDecision" sourceRef="setTax"
				targetRef="setTaxFailed?"></sequenceFlow>


			<callActivity id="exportArticlePDF" name="Export Article PDF"
				calledElement="ASTD Export Article PDF">
				<extensionElements>

					<activiti:in source="rsuite:contents" target="rsuite contents"></activiti:in>
					<activiti:in source="rsuite:contents" target="rsuite:contents"></activiti:in>
					<activiti:in source="articleCaMoId" target="parentMoId"></activiti:in>
				</extensionElements>
			</callActivity>


			<sequenceFlow sourceRef="exportArticlePDF" targetRef="Clear_PDF_Exception_Status" />


			<serviceTask id="Clear_PDF_Exception_Status" name="Clear PDF Exception Status"
				activiti:class="com.reallysi.rsuite.system.workflow.actions.ClearExceptionStatus" />
			<sequenceFlow sourceRef="Clear_PDF_Exception_Status"
				targetRef="Make_XML_Current" />







			<serviceTask id="Clear_HTML_Export_Status" name="Clear HTML Export Status"
				activiti:class="com.reallysi.rsuite.system.workflow.actions.ClearExceptionStatus" />
			<sequenceFlow sourceRef="Clear_HTML_Export_Status"
				targetRef="Restore_Article_CA_After_Exports" />


			<serviceTask id="Set_Article_LM" name="Set Article LM"
				activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectAddLayeredMetadataActionHandler">
				<activiti:field name="metadataName" stringValue="ca-type;article-process-id" />
				<activiti:field name="metadataValue" stringValue="article;${pId}" />
				<activiti:field name="moList" stringValue="${articleCaMoId}" />
				<!--Custom variable; adjust action handlers as appropriate. metadataName={ca-type} -->
				<!--Custom variable; adjust action handlers as appropriate. metadataValue={article} -->
				<!--Custom variable; adjust action handlers as appropriate. moList={${articleCaMoId}} -->
			</serviceTask>
			<sequenceFlow sourceRef="Set_Article_LM" targetRef="Edit_MS_Word" />

			<dataObject id="EXCEPTION_OCCUR" name="EXCEPTION_OCCUR"
				itemSubjectRef="xsd:string">
				<extensionElements>
					<activiti:value>""</activiti:value>
				</extensionElements>
			</dataObject>
			<dataObject id="rsuiteUserId" name="rsuiteUserId"
				itemSubjectRef="xsd:string"></dataObject>


	</process>
</definitions>
