<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
             xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
             xmlns:dc="http://www.omg.org/spec/DD/20100524/DC"
             xmlns:di="http://www.omg.org/spec/DD/20100524/DI"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:activiti="http://activiti.org/bpmn"
             xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI"
             xmlns:jpdl2="urn:jbpm.org:jpdl-3.2"
             xmlns:jpdl1="urn:jbpm.org:jpdl-3.1"
             xmlns:xs="http://www.w3.org/2001/XMLSchema"
             xsi:schemaLocation="http://www.omg.org/spec/BPMN/20100524/MODEL http://www.omg.org/spec/BPMN/2.0/20100501/BPMN20.xsd"
             targetNamespace="http://www.jbpm.org/"
             id="ASTD_Article_Word_to_XML_to_InDesign_Definitions"
             name="ASTD_Article_Word_to_XML_to_InDesign">
   <process isExecutable="true"
            id="ASTD_Article_Word_to_XML_to_InDesign_Process"
            name="ASTD Article Word to XML to InDesign">
            
      <startEvent name="StartNode" id="StartNode"/>
      
      <sequenceFlow sourceRef="StartNode" targetRef="Get_PID_and_Now_String"/>
      
      <endEvent name="EndNode" id="EndNode"/>
      
      
      <serviceTask id="DocX2XML_Transform" name="DocX2XML Transform1111"
                  activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectAstdDocxToXmlActionHandler">
			<activiti:field name="styleMapUri"
				              stringValue="rsuite:/res/plugin/astd-plugin/xslt/word2xml/article-style2tagmap.xml" />
			<activiti:field name="xsltUri"
				             stringValue="rsuite:/res/plugin/astd-plugin/xslt/word2xml/docx2article.xsl" />
			<activiti:field name="outputPath" stringValue="${exportDir}" />
			<activiti:field name="resultFileName" stringValue="${sourceFileName}.xml" />
			<activiti:field name="docxMoId" expression="${docxMoId}" />
			<activiti:field name="xsltGraphicRenameUri"
				stringValue="" />
			<activiti:field name="graphicsPrefix" stringValue="" />
		</serviceTask>
      <sequenceFlow id="fromdocX2XMLTransformToDecision" sourceRef="DocX2XML_Transform" targetRef="DOCX2XML_Error_"/>
      
      
      
      <serviceTask id="XML_to_INCX"  name="XML to INCX2222"
                   activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectAstdXml2IncxActionHandler">
			<activiti:field name="styleCatalogUri"
				             stringValue="rsuite:/res/plugin/astd-plugin/xslt/newtpm2indesign/tpm-dita-indesign-style-catalog.xml" />
			<activiti:field name="xsltUriFromWorkflow"
				             stringValue="rsuite:/res/plugin/astd-plugin/xslt/newtpm2indesign/tpmArticle2InDesign.xsl" />
			<activiti:field name="fileName" stringValue="${sourceFileName}" />
			<activiti:field name="xmlMoId" stringValue="${xmlMoId}" />
		 </serviceTask>
      <sequenceFlow id="fromxMLToINCXToDecision" sourceRef="XML_to_INCX" targetRef="INX_Generation_Failure_"/>
      
      
      <serviceTask id="Load_INX"name="Load INX3333"
                   activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectLoadNonXmlByAliasHandler">
			<activiti:field name="alias" expression="${sourceFileName}.incx" />
			<activiti:field name="commitMessage" stringValue="Loaded by workflow" />
			<activiti:field name="parentMoId" expression="${articleCaMoId}" />
		</serviceTask>
      <sequenceFlow id="fromloadInxToDecision" sourceRef="Load_INX" targetRef="Make_Article_CA_Current"/>
      <userTask id="Final_Edit"
                name="Final Edit"
                activiti:candidateGroups="Managing Editor">
         <documentation>Document: ${fullFileName}</documentation>
      </userTask>
      <sequenceFlow sourceRef="Final_Edit" targetRef="DocX2XML_Transform"/>
      
      
      
      <serviceTask id="Load_DOCX" name="Load DOCX4444"
                   activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectLoadDocxActionHandler">
      </serviceTask>
      <sequenceFlow id="flowFromLoadDocxToValidationError" sourceRef="Load_DOCX" targetRef="DOCX_Load_Failed_"/>
      
      
      
      <serviceTask id="Create_CAs_for_DOCX" name="Create CAs for DOCX5555"
                   activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectCreateCAsActionHandler">
      </serviceTask>
      <sequenceFlow id="flowToSetLM" sourceRef="Create_CAs_for_DOCX" targetRef="Capture_Article_CA_MO_ID"/>
      <userTask id="Begin_Design"
                name="Begin Design"
                activiti:candidateGroups="Art Director">
         <documentation>Document: ${sourceFileName}.incx</documentation>
      </userTask>
      <sequenceFlow sourceRef="Begin_Design" targetRef="Review_First_Pages"/>
      <serviceTask id="Validate_File_Name"
                   activiti:class="com.astd.rsuite.actions.AstdValidateFileNameActionHandler"/>
      <sequenceFlow sourceRef="Validate_File_Name" targetRef="Are_there_validation_errors_"/>
      <exclusiveGateway id="Are_there_validation_errors_"/>
      <sequenceFlow sourceRef="Are_there_validation_errors_" targetRef="Error_Alert">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${VALIDATION_MSGS!=Null == true]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow sourceRef="Are_there_validation_errors_" targetRef="Load_DOCX">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${VALIDATION_MSGS!=Null == false]]></conditionExpression>
      </sequenceFlow>
      <userTask id="Error_Alert"
                name="Error Alert"
                activiti:candidateGroups="Managing Editor">
         <documentation>${VALIDATION_MSGS}</documentation>
      </userTask>
      <sequenceFlow sourceRef="Error_Alert" targetRef="EndNode"/>
      <exclusiveGateway id="Is_Unknown_DOCX_"/>
      <sequenceFlow sourceRef="Is_Unknown_DOCX_" targetRef="Create_CAs_for_DOCX">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${volumeNumber=='99' == false]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow sourceRef="Is_Unknown_DOCX_" targetRef="Create_CAs_for_unknown_DOCX">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${volumeNumber=='99' == true]]></conditionExpression>
      </sequenceFlow>
      
      
      
      
      <serviceTask id="Create_CAs_for_unknown_DOCX" name="Create_CAs_for_unknown_DOCX6666"
                 activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectCreateCAsActionHandler"/>
      <sequenceFlow sourceRef="Create_CAs_for_unknown_DOCX"
                    targetRef="Capture_Article_CA_MO_ID"/>
      <userTask id="Edit_MS_Word"
                name="Edit MS Word"
                activiti:candidateGroups="Managing Editor">
         <documentation>Document: ${fullFileName}</documentation>
      </userTask>
      <sequenceFlow sourceRef="Edit_MS_Word" targetRef="Edit_MS_Word"/>
      <userTask id="Edit_MS_Word"
                name="Edit MS Word"
                activiti:candidateGroups="Editor">
         <documentation>Document: ${fullFileName}</documentation>
      </userTask>
      <sequenceFlow sourceRef="Edit_MS_Word" targetRef="Final_Edit"/>
      <userTask id="Review_First_Pages"
                name="Review First Pages"
                activiti:candidateGroups="Managing Editor">
         <documentation>Document: ${sourceFileName}.incx</documentation>
      </userTask>
      <sequenceFlow sourceRef="Review_First_Pages" targetRef="gateway_Review_First_Pages"/>
      <exclusiveGateway id="gateway_Review_First_Pages"/>
      <sequenceFlow sourceRef="gateway_Review_First_Pages"
                    targetRef="Set_Minor_text_changes">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "Set_Minor_text_changes"}]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow sourceRef="gateway_Review_First_Pages"
                    targetRef="Set_significant_changes">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "Set_significant_changes"}]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow sourceRef="gateway_Review_First_Pages"
                    targetRef="Set_No_detail_changes">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "Set_No_detail_changes"}]]></conditionExpression>
      </sequenceFlow>
      <userTask id="Make_First_Corrections"
                name="Make First Corrections"
                activiti:candidateGroups="Art Director">
         <documentation>Document: ${sourceFileName}.incx Detail: ${detail}</documentation>
      </userTask>
      <sequenceFlow sourceRef="Make_First_Corrections" targetRef="Review_Dummy"/>
      <userTask id="Review_Dummy"
                name="Review Dummy"
                activiti:candidateGroups="Managing Editor">
         <documentation>${sourceFileName}.incx</documentation>
      </userTask>
      <sequenceFlow sourceRef="Review_Dummy" targetRef="gateway_Review_Dummy"/>
      <exclusiveGateway id="gateway_Review_Dummy"/>
      <sequenceFlow sourceRef="gateway_Review_Dummy" targetRef="Set_No_Detail_Changes_2">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "Set_No_Detail_Changes_2"}]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow sourceRef="gateway_Review_Dummy" targetRef="Set_Minor_text_changes_2">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "Set_Minor_text_changes_2"}]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow sourceRef="gateway_Review_Dummy"
                    targetRef="Set_signficant_text_changes_2">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "Set_signficant_text_changes_2"}]]></conditionExpression>
      </sequenceFlow>
      <userTask id="Create_Dummy"
                name="Create Dummy"
                activiti:candidateGroups="Art Director">
         <documentation>Document: ${sourceFileName}.incx Detail: ${detail}</documentation>
      </userTask>
      <sequenceFlow sourceRef="Create_Dummy" targetRef="Approve_Final_Dummy"/>
      <userTask id="Approve_Final_Dummy"
                name="Approve Final Dummy"
                activiti:candidateGroups="Managing Editor">
         <documentation>Document: ${sourceFileName}</documentation>
      </userTask>
      <sequenceFlow sourceRef="Approve_Final_Dummy" targetRef="gateway_Approve_Final_Dummy"/>
      <exclusiveGateway id="gateway_Approve_Final_Dummy"/>
      <sequenceFlow sourceRef="gateway_Approve_Final_Dummy" targetRef="Prep_for_Printer">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "Prep_for_Printer"}]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow sourceRef="gateway_Approve_Final_Dummy" targetRef="Review_Dummy">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "Review_Dummy"}]]></conditionExpression>
      </sequenceFlow>
      <userTask id="Prep_for_Printer"
                name="Prep for Printer"
                activiti:candidateGroups="Art Director">
         <documentation>Document: ${sourceFileName}</documentation>
      </userTask>
      <sequenceFlow sourceRef="Prep_for_Printer" targetRef="Approve_Blueline"/>
      <userTask id="Approve_Blueline"
                name="Approve Blueline"
                activiti:candidateGroups="Super Editor">
         <documentation>Document: ${sourceFileName}</documentation>
      </userTask>
      <sequenceFlow sourceRef="Approve_Blueline" targetRef="Export_Article_PDF"/>
      
      
      
      
      <serviceTask id="Set_No_Detail_Changes_2" name="Set_No_Detail_Changes7777"
                   activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectSetGlobalVariablesActionHandler">
			 <activiti:field name="variableNames" stringValue="exportDir;sharedExportDir" />
			 <activiti:field name="values"
				stringValue="${astd.base.export.dir}${astd.xml.export.dir}/${pId};${astd.export.share}${astd.xml.export.dir}/${pId}" />
		 </serviceTask>
      <sequenceFlow sourceRef="Set_No_Detail_Changes_2" targetRef="Create_Dummy"/>
      
      
      
      <serviceTask id="Docx_to_XML_after_Dummy_Review"  name="tes1"
                   activiti:class="org.dita4publishers.rsuite.workflow.actions.Docx2XmlActionHandler">
<!--Custom variable; adjust action handlers as appropriate. styleMapUri={rsuite:/res/plugin/astd/xslt/word2xml/article-style2tagmap.xml}-->
<!--Custom variable; adjust action handlers as appropriate. xsltUri={rsuite:/res/plugin/astd/xslt/word2xml/docx2article.xsl}-->
<!--Custom variable; adjust action handlers as appropriate. outputPath={${exportDir}}-->
<!--Custom variable; adjust action handlers as appropriate. docxMoId={${docxMoId}}-->
<!--Custom variable; adjust action handlers as appropriate. resultFileName={${sourceFileName}.xml}--></serviceTask>
      <sequenceFlow sourceRef="Docx_to_XML_after_Dummy_Review"
                    targetRef="Update_XML_after_Dummy_Review"/>
                    
                    
                    
                    
      <serviceTask id="Set_Minor_text_changes_2" name="tes2"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.SetGlobalVariablesActionHandler">
<!--Custom variable; adjust action handlers as appropriate. variableNames={detail}-->
<!--Custom variable; adjust action handlers as appropriate. values={minor text changes}--></serviceTask>
      <sequenceFlow sourceRef="Set_Minor_text_changes_2"
                    targetRef="Docx_to_XML_after_Dummy_Review"/>
                    
                    
      <serviceTask id="Set_signficant_text_changes_2" name="tes3"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.SetGlobalVariablesActionHandler">
<!--Custom variable; adjust action handlers as appropriate. variableNames={detail}-->
<!--Custom variable; adjust action handlers as appropriate. values={significant text changes}--></serviceTask>
      <sequenceFlow sourceRef="Set_signficant_text_changes_2"
                    targetRef="Docx_to_XML_after_Dummy_Review"/>
      <exclusiveGateway id="If_significant_changes_"/>
      <sequenceFlow sourceRef="If_significant_changes_" targetRef="XML_to_INCX_3">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${detail=='significant text changes' == true]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow sourceRef="If_significant_changes_"
                    targetRef="Make_Article_CA_Current_3">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${detail=='significant text changes' == false]]></conditionExpression>
      </sequenceFlow>
      
      
      
      
      <serviceTask id="XML_to_INCX_3" name="tes4"
                   activiti:class="com.astd.rsuite.actions.AstdXml2IncxActionHandler">
<!--Custom variable; adjust action handlers as appropriate. styleCatalogUri={rsuite:/res/plugin/astd/xslt/tandd2indesign/tandd-dita-indesign-style-catalog.xml}-->
<!--Custom variable; adjust action handlers as appropriate. xsltUri={rsuite:/res/plugin/astd/xslt/tandd2indesign/tanddArticle2InDesign.xsl}-->
<!--Custom variable; adjust action handlers as appropriate. fileName={${sourceFileName}}-->
<!--Custom variable; adjust action handlers as appropriate. xmlMoId={${xmlMoId}}--></serviceTask>
      <sequenceFlow sourceRef="XML_to_INCX_3" targetRef="Load_INCX_3"/>
      
      
      
      <serviceTask id="Load_INCX_3" name="tes5"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.LoadNonXmlByAliasActionHandler">
<!--Custom variable; adjust action handlers as appropriate. commitMessage={Regenerated from XML to reflect ${detail} following review dummy task}--></serviceTask>
      <sequenceFlow sourceRef="Load_INCX_3" targetRef="Make_Article_CA_Current_3"/>
      
      
      
      <serviceTask id="Docx2DITA_2" name="tes6"
                   activiti:class="org.dita4publishers.rsuite.workflow.actions.Docx2XmlActionHandler">
<!--Custom variable; adjust action handlers as appropriate. styleMapUri={rsuite:/res/plugin/astd/xslt/word2xml/article-style2tagmap.xml}-->
<!--Custom variable; adjust action handlers as appropriate. xsltUri={rsuite:/res/plugin/astd/xslt/word2xml/docx2article.xsl}-->
<!--Custom variable; adjust action handlers as appropriate. outputPath={${exportDir}}-->
<!--Custom variable; adjust action handlers as appropriate. docxMoId={${docxMoId}}-->
<!--Custom variable; adjust action handlers as appropriate. resultFileName={${sourceFileName}.xml}--></serviceTask>
      <sequenceFlow sourceRef="Docx2DITA_2" targetRef="Update_XML_after_first_pages"/>
      
      
      
      <serviceTask id="XML_to_INCX_2" name="tes7"
                   activiti:class="com.astd.rsuite.actions.AstdXml2IncxActionHandler">
<!--Custom variable; adjust action handlers as appropriate. styleCatalogUri={rsuite:/res/plugin/astd/xslt/tandd2indesign/tandd-dita-indesign-style-catalog.xml}-->
<!--Custom variable; adjust action handlers as appropriate. xsltUri={rsuite:/res/plugin/astd/xslt/tandd2indesign/tanddArticle2InDesign.xsl}-->
<!--Custom variable; adjust action handlers as appropriate. fileName={${sourceFileName}}-->
<!--Custom variable; adjust action handlers as appropriate. xmlMoId={${xmlMoId}}--></serviceTask>
      <sequenceFlow sourceRef="XML_to_INCX_2" targetRef="Load_INCX_2"/>
      
      
      
      
      <serviceTask id="Load_INCX_2" name="tes8"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.LoadNonXmlByAliasActionHandler">
<!--Custom variable; adjust action handlers as appropriate. commitMessage={Regenerated to reflect ${detail} following review first pages task}--></serviceTask>
      <sequenceFlow sourceRef="Load_INCX_2" targetRef="Make_Article_CA_Current_2"/>
      <exclusiveGateway id="Is_significant_"/>
      <sequenceFlow sourceRef="Is_significant_" targetRef="XML_to_INCX_2">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${detail=='significant text changes' == true]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow sourceRef="Is_significant_" targetRef="Make_Article_CA_Current_2">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${detail=='significant text changes' == false]]></conditionExpression>
      </sequenceFlow>
      
      
      
      
      <serviceTask id="Set_significant_changes" name="tes9"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.SetGlobalVariablesActionHandler">
<!--Custom variable; adjust action handlers as appropriate. variableNames={detail}-->
<!--Custom variable; adjust action handlers as appropriate. values={significant text changes}--></serviceTask>
      <sequenceFlow sourceRef="Set_significant_changes" targetRef="Docx2DITA_2"/>
      <serviceTask id="Set_Minor_text_changes"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.SetGlobalVariablesActionHandler">
<!--Custom variable; adjust action handlers as appropriate. variableNames={detail}-->
<!--Custom variable; adjust action handlers as appropriate. values={minor text changes}--></serviceTask>
      <sequenceFlow sourceRef="Set_Minor_text_changes" targetRef="Docx2DITA_2"/>
      <serviceTask id="Set_No_detail_changes"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.SetGlobalVariablesActionHandler">
<!--Custom variable; adjust action handlers as appropriate. variableNames={detail}-->
<!--Custom variable; adjust action handlers as appropriate. values={no text changes}--></serviceTask>
      <sequenceFlow sourceRef="Set_No_detail_changes" targetRef="Make_First_Corrections"/>
      <exclusiveGateway id="DOCX2XML_Error_"/>
      <sequenceFlow sourceRef="DOCX2XML_Error_" targetRef="Word_to_XML_Error">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${EXCEPTION_OCCUR==true == true]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow sourceRef="DOCX2XML_Error_" targetRef="Import_DITA">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${EXCEPTION_OCCUR==true == false]]></conditionExpression>
      </sequenceFlow>
      <userTask id="Word_to_XML_Error"
                name="Word to XML Error"
                activiti:candidateGroups="Managing Editor">
         <documentation>${moDisplayName}: Generation of XML from DOCX failed: ${exceptionMessage} &lt;br/&gt;See conversion report &lt;a href='/rsuite/rest/v1/report/generated/${xformReportId}?skey=RSUITE-SESSION-KEY' target='_xformReport'&gt;${xformReportFileName}&lt;a/&gt;</documentation>
      </userTask>
      <sequenceFlow sourceRef="Word_to_XML_Error" targetRef="EndNode"/>
      <exclusiveGateway id="INX_Generation_Failure_"/>
      <sequenceFlow sourceRef="INX_Generation_Failure_" targetRef="Load_INX">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${EXCEPTION_OCCUR==true == false]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow sourceRef="INX_Generation_Failure_" targetRef="INX_Generation_Error">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${EXCEPTION_OCCUR==true == true]]></conditionExpression>
      </sequenceFlow>
      <userTask id="INX_Generation_Error"
                name="INX Generation Error"
                activiti:candidateGroups="Managing Editor">
         <documentation>Failed to generate INX from article ${fullFileName} &lt;br/&gt;See conversion report &lt;a href='/rsuite/rest/v1/report/generated/${xformReportId}?skey=RSUITE-SESSION-KEY' target='_xformReport'&gt;${xformReportFileName}&lt;a/&gt;</documentation>
      </userTask>
      <sequenceFlow sourceRef="INX_Generation_Error"
                    targetRef="gateway_INX_Generation_Error"/>
      <exclusiveGateway id="gateway_INX_Generation_Error"/>
      <sequenceFlow sourceRef="gateway_INX_Generation_Error" targetRef="EndNode">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "EndNode"}]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow sourceRef="gateway_INX_Generation_Error" targetRef="Final_Edit">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "Final_Edit"}]]></conditionExpression>
      </sequenceFlow>
      
      
      
      
      
      <serviceTask id="Update_XML_after_first_pages" name="tes10"
                   activiti:class="com.reallysi.rsuite.workflow.actions.TopicImporterActionHandler">
<!--Custom variable; adjust action handlers as appropriate. topicPath={${exportDir}/${sourceFileName}/${sourceFileName}.xml}-->
<!--Custom variable; adjust action handlers as appropriate. parentCaId={${articleCaMoId}}-->
<!--Custom variable; adjust action handlers as appropriate. commitMessage={Regenerated to reflect ${detail} after first pages review}-->
<!--Custom variable; adjust action handlers as appropriate. importedMoListVarname={xmlMoId}-->
<!--Custom variable; adjust action handlers as appropriate. topicContainerName={media}--></serviceTask>
      <sequenceFlow sourceRef="Update_XML_after_first_pages" targetRef="Is_significant_"/>
      
      
      
      
       
      <serviceTask id="Update_XML_after_Dummy_Review" name="tes11"
                   activiti:class="com.reallysi.rsuite.workflow.actions.TopicImporterActionHandler">
<!--Custom variable; adjust action handlers as appropriate. topicPath={${exportDir}/${sourceFileName}/${sourceFileName}.xml}-->
<!--Custom variable; adjust action handlers as appropriate. parentCaId={${articleCaMoId}}-->
<!--Custom variable; adjust action handlers as appropriate. commitMessage={Regenerated to reflect ${detail} after dummy review}-->
<!--Custom variable; adjust action handlers as appropriate. importedMoListVarname={xmlMoId}-->
<!--Custom variable; adjust action handlers as appropriate. topicContainerName={media}--></serviceTask>
      <sequenceFlow sourceRef="Update_XML_after_Dummy_Review"
                    targetRef="If_significant_changes_"/>
      <exclusiveGateway id="DOCX_Load_Failed_"/>
      <sequenceFlow sourceRef="DOCX_Load_Failed_" targetRef="Docx_Load_Error">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${EXCEPOTION_OCCUR=='true' == true]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow sourceRef="DOCX_Load_Failed_" targetRef="Capture_DOCX_MO_ID">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${EXCEPOTION_OCCUR=='true' == false]]></conditionExpression>
      </sequenceFlow>
      <userTask id="Docx_Load_Error"
                name="Docx Load Error"
                activiti:candidateGroups="RSuiteAdministrator">
         <documentation>Load of file ${fullFileName} failed: ${exceptionMessage}</documentation>
      </userTask>
      <sequenceFlow sourceRef="Docx_Load_Error" targetRef="EndNode"/>
      <exclusiveGateway id="DITA_Load_Failed_"/>
      <sequenceFlow sourceRef="DITA_Load_Failed_" targetRef="Load_of_DITA_Failed">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${EXCEPTION_OCCUR=='true' == true]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow sourceRef="DITA_Load_Failed_" targetRef="XML_to_INCX">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${EXCEPTION_OCCUR=='true' == false]]></conditionExpression>
      </sequenceFlow>
      <userTask id="Load_of_DITA_Failed"
                name="Load of DITA Failed"
                activiti:candidateGroups="RSuiteAdministrator">
         <documentation>Load of DITA XML from DOCX ${fullFileName} failed: ${exceptionMessage}</documentation>
      </userTask>
      <sequenceFlow sourceRef="Load_of_DITA_Failed" targetRef="gateway_Load_of_DITA_Failed"/>
      <exclusiveGateway id="gateway_Load_of_DITA_Failed"/>
      <sequenceFlow sourceRef="gateway_Load_of_DITA_Failed" targetRef="EndNode">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "EndNode"}]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow sourceRef="gateway_Load_of_DITA_Failed" targetRef="DocX2XML_Transform">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "DocX2XML_Transform"}]]></conditionExpression>
      </sequenceFlow>
      <userTask id="Workflow_Complete"
                name="Workflow Complete"
                activiti:candidateGroups="Managing Editor">
         <documentation>Article ${sourceFileName}: Bluelines have been approved. Workflow is complete.</documentation>
      </userTask>
      <sequenceFlow sourceRef="Workflow_Complete" targetRef="EndNode"/>
      
      
      
      
      <serviceTask id="Set_Variables_From_Properties" name="Ensure Map"
                    activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectSetGlobalVariablesActionHandler">
			 <activiti:field name="variableNames" stringValue="exportDir;sharedExportDir" />
			 <activiti:field name="values"
				stringValue="${astd.base.export.dir}${astd.xml.export.dir}/${pId};${astd.export.share}${astd.xml.export.dir}/${pId}" />
		 </serviceTask>
      <sequenceFlow id="fromSetVariablesToValidateFileName" sourceRef="Set_Variables_From_Properties"
                    targetRef="Validate_File_Name"/>
                    
                    
                    
                    
      <serviceTask id="Get_PID_and_Now_String" name="Set PID and Date Now" name="tes13"
                   activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectSetDynamicValuesToVariablesActionHandler">
                  <activiti:field name="variableNames" stringValue="pId;nowString" />
                 <activiti:field name="items" stringValue="pId;nowString" /></serviceTask>
                 
      <sequenceFlow id="flowToSetVariablesFromProps" sourceRef="Get_PID_and_Now_String"
                    targetRef="Set_Variables_From_Properties"/>
                    
                    
                    
                    
      <serviceTask id="Capture_DOCX_MO_ID" name="tes14"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.SetVariableFromMoWorkflowList">
<!--Custom variable; adjust action handlers as appropriate. targetVariableName={docxMoId}--></serviceTask>
      <sequenceFlow sourceRef="Capture_DOCX_MO_ID" targetRef="Is_Unknown_DOCX_"/>
      
      
      
      
      <serviceTask id="Capture_Article_CA_MO_ID" name="tes15"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.SetVariableFromMoWorkflowList">
<!--Custom variable; adjust action handlers as appropriate. targetVariableName={articleCaMoId}--></serviceTask>
      <sequenceFlow sourceRef="Capture_Article_CA_MO_ID" targetRef="Set_Article_LM"/>
      
      
      
      
      
      <serviceTask id="Make_Article_CA_Current" name="Make Article CA Current"
                    activiti:class="org.astd.rsuite.workflow.actions.leaving.rsuite5.ProjectSetWorkflowMoListFromVariableHandler">
			    <activiti:field name="moSpecifyingVariableName"
				       stringValue="articleCaMoId" />
		</serviceTask>
		
      <sequenceFlow sourceRef="Make_Article_CA_Current" targetRef="Begin_Design"/>
      
      
      <serviceTask id="Make_Article_CA_Current_2"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.SetWorkflowMoListFromVariable">
<!--Custom variable; adjust action handlers as appropriate. moSpecifyingVariableName={articleCaMoId}--></serviceTask>
      <sequenceFlow sourceRef="Make_Article_CA_Current_2"
                    targetRef="Make_First_Corrections"/>
                    
                    
      <serviceTask id="Make_Article_CA_Current_3"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.SetWorkflowMoListFromVariable">
<!--Custom variable; adjust action handlers as appropriate. moSpecifyingVariableName={articleCaMoId}--></serviceTask>
      <sequenceFlow sourceRef="Make_Article_CA_Current_3" targetRef="Create_Dummy"/>
      <sequenceFlow sourceRef="" targetRef="Clear_PDF_Exception_Status"/>
      
      
      
      <serviceTask id="Make_XML_Current"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.SetWorkflowMoListFromVariable">
<!--Custom variable; adjust action handlers as appropriate. moSpecifyingVariableName={xmlMoId}--></serviceTask>
      <sequenceFlow sourceRef="Make_XML_Current" targetRef="Export_Article_HTML"/>
      <serviceTask id="Restore_Article_CA_After_Exports"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.SetWorkflowMoListFromVariable">
<!--Custom variable; adjust action handlers as appropriate. moSpecifyingVariableName={articleCaMoId}--></serviceTask>



      <sequenceFlow sourceRef="Restore_Article_CA_After_Exports"
                    targetRef="Workflow_Complete"/>
      <sequenceFlow sourceRef="" targetRef="Clear_HTML_Export_Status"/>
      
      
      
      
      <serviceTask id="Import_DITA" name="Import DITA"
                   activiti:class="com.reallysi.rsuite.workflow.actions.TopicImporterActionHandler">
			<activiti:field name="topicPath"
				             stringValue="${exportDir}/${sourceFileName}/${sourceFileName}.xml" />
			<activiti:field name="parentCaId" stringValue="${articleCaMoId}" />
			<activiti:field name="commitMessage"
				             stringValue="Loaded via workflow from hotfolder" />
			<activiti:field name="importedMoListVarname"
				             stringValue="xmlMoId" />
			<activiti:field name="topicContainerName" stringValue="media" />
		</serviceTask>
		
      <sequenceFlow sourceRef="Import_DITA" targetRef="DITA_Load_Failed_"/>
      
      
      
      
      <serviceTask id="Clear_PDF_Exception_Status" name="tes17"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.ClearExceptionStatus"/>
      <sequenceFlow sourceRef="Clear_PDF_Exception_Status" targetRef="Make_XML_Current"/>
      <serviceTask id="Clear_HTML_Export_Status"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.ClearExceptionStatus"/>
      <sequenceFlow sourceRef="Clear_HTML_Export_Status"
                    targetRef="Restore_Article_CA_After_Exports"/>
      <serviceTask id="Set_Article_LM"
                   activiti:class="com.reallysi.service.workflow.ingestion.action.AddLayeredMetadataActionHandler">
<!--Custom variable; adjust action handlers as appropriate. metadataName={ca-type}-->
<!--Custom variable; adjust action handlers as appropriate. metadataValue={article}-->
<!--Custom variable; adjust action handlers as appropriate. moList={${articleCaMoId}}--></serviceTask>
      <sequenceFlow sourceRef="Set_Article_LM" targetRef="Edit_MS_Word"/>
      
      
      
   </process>
</definitions>
