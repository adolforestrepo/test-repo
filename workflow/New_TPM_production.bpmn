<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
             xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
             xmlns:dc="http://www.omg.org/spec/DD/20100524/DC"
             xmlns:di="http://www.omg.org/spec/DD/20100524/DI"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:activiti="http://activiti.org/bpmn"
             xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI"
             xmlns:jpdl2="urn:jbpm.org:jpdl-3.2"
             xmlns:jpdl1="urn:jbpm.org:jpdl-3.1"
             xmlns:xs="http://www.w3.org/2001/XMLSchema"
             xsi:schemaLocation="http://www.omg.org/spec/BPMN/20100524/MODEL http://www.omg.org/spec/BPMN/2.0/20100501/BPMN20.xsd"
             targetNamespace="http://www.jbpm.org/"
             id="New_TPM_production_Definitions"
             name="New_TPM_production">
   <process isExecutable="true"
            id="New_TPM_production_Process"
            name="New TPM production">
      <startEvent name="StartNode" id="StartNode"/>
      <sequenceFlow sourceRef="StartNode" targetRef="Get_PID_and_Now_String"/>
      <endEvent name="EndNode" id="EndNode"/>
      <serviceTask id="DocX2XML_Transform"
                   activiti:class="org.dita4publishers.rsuite.workflow.actions.Docx2XmlActionHandler">
<!--Custom variable; adjust action handlers as appropriate. styleMapUri={rsuite:/res/plugin/astd/xslt/word2xml/article-style2tagmap.xml}-->
<!--Custom variable; adjust action handlers as appropriate. xsltUri={rsuite:/res/plugin/astd/xslt/word2xml/docx2article.xsl}-->
<!--Custom variable; adjust action handlers as appropriate. outputPath={${exportDir}}-->
<!--Custom variable; adjust action handlers as appropriate. resultFileName={${sourceFileName}.xml}-->
<!--Custom variable; adjust action handlers as appropriate. docxMoId={${docxMoId}}--></serviceTask>
      <sequenceFlow sourceRef="DocX2XML_Transform" targetRef="DOCX2XML_Error_"/>
      <serviceTask id="XML_to_INCX"
                   activiti:class="com.astd.rsuite.actions.AstdXml2IncxActionHandler">
<!--Custom variable; adjust action handlers as appropriate. styleCatalogUri={rsuite:/res/plugin/astd/xslt/newtpm2indesign/tpm-dita-indesign-style-catalog.xml}-->
<!--Custom variable; adjust action handlers as appropriate. xsltUri={rsuite:/res/plugin/astd/xslt/newtpm2indesign/tpmArticle2InDesign.xsl}-->
<!--Custom variable; adjust action handlers as appropriate. fileName={${sourceFileName}}-->
<!--Custom variable; adjust action handlers as appropriate. xmlMoId={${xmlMoId}}--></serviceTask>
      <sequenceFlow sourceRef="XML_to_INCX" targetRef="INX_Generation_Failure_"/>
      <serviceTask id="Load_INX"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.LoadNonXmlByAliasActionHandler">
<!--Custom variable; adjust action handlers as appropriate. alias={${sourceFileName}.incx}-->
<!--Custom variable; adjust action handlers as appropriate. commitMessage={Loaded by workflow}-->
<!--Custom variable; adjust action handlers as appropriate. parentMoId={${articleCaId}}--></serviceTask>
      <sequenceFlow sourceRef="Load_INX" targetRef="Have_No_Exec_Summary_"/>
      <exclusiveGateway id="Have_No_Exec_Summary_"/>
      <sequenceFlow sourceRef="Have_No_Exec_Summary_" targetRef="Load_Exec_Summary">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${empty incxExecSummaryFile == false]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow sourceRef="Have_No_Exec_Summary_" targetRef="Make_Article_CA_Current">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${empty incxExecSummaryFile == true]]></conditionExpression>
      </sequenceFlow>
      <serviceTask id="Load_Exec_Summary"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.LoadNonXmlByAliasActionHandler">
<!--Custom variable; adjust action handlers as appropriate. alias={${incxExecSummaryFile}}-->
<!--Custom variable; adjust action handlers as appropriate. fileToLoad={${incxExecSummaryPath}}-->
<!--Custom variable; adjust action handlers as appropriate. commitMessage={Generated by workflow}-->
<!--Custom variable; adjust action handlers as appropriate. parentMoId={${articleCaMoId}}--></serviceTask>
      <sequenceFlow sourceRef="Load_Exec_Summary" targetRef="Make_Article_CA_Current"/>
      <userTask id="TPM_Final_Edit"
                name="TPM Final Edit"
                activiti:candidateGroups="Associate Editor">
         <documentation>Document: ${fullFileName}</documentation>
      </userTask>
      <sequenceFlow sourceRef="TPM_Final_Edit" targetRef="Get_Tax"/>
      <serviceTask id="Load_DOCX"
                   activiti:class="com.reallysi.service.workflow.ingestion.action.LoadActionHandler">
<!--Custom variable; adjust action handlers as appropriate. regex={}-->
<!--Custom variable; adjust action handlers as appropriate. xmlMoMatchExpressions={}-->
<!--Custom variable; adjust action handlers as appropriate. layeredMetadataMatchExpressions={}-->
<!--Custom variable; adjust action handlers as appropriate. moChunkMatchExpressions={}-->
<!--Custom variable; adjust action handlers as appropriate. collection={}-->
<!--Custom variable; adjust action handlers as appropriate. inputFolder={}-->
<!--Custom variable; adjust action handlers as appropriate. notDelete={}-->
<!--Custom variable; adjust action handlers as appropriate. creationPolicy={UpdateRepository}-->
<!--Custom variable; adjust action handlers as appropriate. commitMessage={Loaded via workflow}-->
<!--Custom variable; adjust action handlers as appropriate. alwaysTreatAsXml={}-->
<!--Custom variable; adjust action handlers as appropriate. neverTreatAsXml={}--></serviceTask>
      <sequenceFlow sourceRef="Load_DOCX" targetRef="DOCX_Load_Failed_"/>
      <serviceTask id="Create_CAs_for_DOCX"
                   activiti:class="com.reallysi.service.workflow.action.CreateFolderCaOrCaNodeActionHandler">
<!--Custom variable; adjust action handlers as appropriate. canode={${sourceFileName}}-->
<!--Custom variable; adjust action handlers as appropriate. ca={Issue ${month}}-->
<!--Custom variable; adjust action handlers as appropriate. folder={/Magazines/TPM/Volume ${volumeNumber}}-->
<!--Custom variable; adjust action handlers as appropriate. attachImmediately={true}-->
<!--Custom variable; adjust action handlers as appropriate. caIdCreatedName={articleCaId}-->
<!--Custom variable; adjust action handlers as appropriate. replaceMOWithCAinRSuiteContents={true}--></serviceTask>
      <sequenceFlow sourceRef="Create_CAs_for_DOCX" targetRef="Capture_Article_CA_MO_ID"/>
      <userTask id="TPM_Begin_Design"
                name="TPM Begin Design"
                activiti:candidateGroups="Art Director">
         <documentation>Document: ${sourceFileName}.incx</documentation>
      </userTask>
      <sequenceFlow sourceRef="TPM_Begin_Design" targetRef="TPM_Review_Proofs"/>
      <serviceTask id="Validate_File_Name"
                   activiti:class="com.astd.rsuite.actions.AstdValidateFileNameActionHandler">
<!--Custom variable; adjust action handlers as appropriate. allowedExtension={.docx}-->
<!--Custom variable; adjust action handlers as appropriate. errorIfLocked={true}-->
<!--Custom variable; adjust action handlers as appropriate. extensionErrorMessage={Only MS Word 2007 or later allowed. Please open in MS Word 2007 and save as a .docx file.}--></serviceTask>
      <sequenceFlow sourceRef="Validate_File_Name" targetRef="Are_there_validation_errors_"/>
      <exclusiveGateway id="Are_there_validation_errors_"/>
      <sequenceFlow sourceRef="Are_there_validation_errors_"
                    targetRef="TPM_Error_Alert_Article_Worfklow_Docx_Load_Failed">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${VALIDATION_MSGS!=null == true]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow sourceRef="Are_there_validation_errors_" targetRef="Load_DOCX">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${VALIDATION_MSGS!=null == false]]></conditionExpression>
      </sequenceFlow>
      <userTask id="TPM_Error_Alert_Article_Worfklow_Docx_Load_Failed"
                name="TPM Error Alert: Article Worfklow: Docx Load Failed"
                activiti:candidateGroups="Managing Editor">
         <documentation>${VALIDATION_MSGS}</documentation>
      </userTask>
      <sequenceFlow sourceRef="TPM_Error_Alert_Article_Worfklow_Docx_Load_Failed"
                    targetRef="EndNode"/>
      <exclusiveGateway id="Is_Unknown_DOCX_"/>
      <sequenceFlow sourceRef="Is_Unknown_DOCX_" targetRef="Create_CAs_for_DOCX">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${volumeNumber=='99' == false]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow sourceRef="Is_Unknown_DOCX_" targetRef="Create_CAs_for_unknown_DOCX">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${volumeNumber=='99' == true]]></conditionExpression>
      </sequenceFlow>
      <serviceTask id="Create_CAs_for_unknown_DOCX"
                   activiti:class="com.reallysi.service.workflow.action.CreateFolderCaOrCaNodeActionHandler">
<!--Custom variable; adjust action handlers as appropriate. canode={${sourceFileName}}-->
<!--Custom variable; adjust action handlers as appropriate. ca={Unassigned}-->
<!--Custom variable; adjust action handlers as appropriate. folder={/Magazines/TPM}-->
<!--Custom variable; adjust action handlers as appropriate. attachImmediately={true}-->
<!--Custom variable; adjust action handlers as appropriate. caIdCreatedName={articleCaId}-->
<!--Custom variable; adjust action handlers as appropriate. replaceMOWithCAinRSuiteContents={true}--></serviceTask>
      <sequenceFlow sourceRef="Create_CAs_for_unknown_DOCX"
                    targetRef="Capture_Article_CA_MO_ID"/>
      <userTask id="TPM_Edit_MS_Word"
                name="TPM Edit MS Word"
                activiti:candidateGroups="Associate Editor">
         <documentation>Document: ${fullFileName}</documentation>
      </userTask>
      <sequenceFlow sourceRef="TPM_Edit_MS_Word" targetRef="TPM_Edit_MS_Word"/>
      <userTask id="TPM_Edit_MS_Word"
                name="TPM Edit MS Word"
                activiti:candidateGroups="Editor">
         <documentation>Document: ${fullFileName}</documentation>
      </userTask>
      <sequenceFlow sourceRef="TPM_Edit_MS_Word" targetRef="TPM_Final_Edit"/>
      <userTask id="TPM_Review_Proofs"
                name="TPM Review Proofs"
                activiti:candidateGroups="Associate Editor">
         <documentation>Document: ${sourceFileName}.incx</documentation>
      </userTask>
      <sequenceFlow sourceRef="TPM_Review_Proofs" targetRef="Set_No_detail_changes"/>
      <userTask id="TPM_Create_HTMls"
                name="TPM Create HTMls"
                activiti:candidateGroups="Art Director">
         <documentation>Document: ${sourceFileName}</documentation>
      </userTask>
      <sequenceFlow sourceRef="TPM_Create_HTMls" targetRef="Make_XML_Current"/>
      <serviceTask id="Set_No_detail_changes"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.SetGlobalVariablesActionHandler">
<!--Custom variable; adjust action handlers as appropriate. variableNames={detail}-->
<!--Custom variable; adjust action handlers as appropriate. values={no text changes}--></serviceTask>
      <sequenceFlow sourceRef="Set_No_detail_changes" targetRef="TPM_Create_HTMls"/>
      <exclusiveGateway id="DOCX2XML_Error_"/>
      <sequenceFlow sourceRef="DOCX2XML_Error_"
                    targetRef="Error_Alert_Article_Workflow_Word_to_XML_Failed">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${EXCEPTION_OCCUR==true == true]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow sourceRef="DOCX2XML_Error_" targetRef="Import_DITA">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${EXCEPTION_OCCUR==true == false]]></conditionExpression>
      </sequenceFlow>
      <userTask id="Error_Alert_Article_Workflow_Word_to_XML_Failed"
                name="Error Alert: Article Workflow: Word to XML Failed"
                activiti:candidateGroups="Managing Editor">
         <documentation>${moDisplayName}: Generation of XML from DOCX failed: ${exceptionMessage} &lt;br/&gt;See conversion report &lt;a href='/rsuite/rest/v1/report/generated/${xformReportId}?skey=RSUITE-SESSION-KEY' target='_xformReport'&gt;${xformReportFileName}&lt;a/&gt;</documentation>
      </userTask>
      <sequenceFlow sourceRef="Error_Alert_Article_Workflow_Word_to_XML_Failed"
                    targetRef="Clear_Load_Dita_Status"/>
      <exclusiveGateway id="INX_Generation_Failure_"/>
      <sequenceFlow sourceRef="INX_Generation_Failure_" targetRef="Load_INX">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${EXCEPTION_OCCUR==true == false]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow sourceRef="INX_Generation_Failure_"
                    targetRef="TPM_Error_Alert_Article_Workflow_InCopy_Generation_Failed">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${EXCEPTION_OCCUR==true == true]]></conditionExpression>
      </sequenceFlow>
      <userTask id="TPM_Error_Alert_Article_Workflow_InCopy_Generation_Failed"
                name="TPM Error Alert: Article Workflow: InCopy Generation Failed"
                activiti:candidateGroups="Managing Editor">
         <documentation>Failed to generate INX from article ${fullFileName} &lt;br/&gt;See conversion report &lt;a href='/rsuite/rest/v1/report/generated/${xformReportId}?skey=RSUITE-SESSION-KEY' target='_xformReport'&gt;${xformReportFileName}&lt;a/&gt;</documentation>
      </userTask>
      <sequenceFlow sourceRef="TPM_Error_Alert_Article_Workflow_InCopy_Generation_Failed"
                    targetRef="gateway_TPM_Error_Alert_Article_Workflow_InCopy_Generation_Failed"/>
      <exclusiveGateway id="gateway_TPM_Error_Alert_Article_Workflow_InCopy_Generation_Failed"/>
      <sequenceFlow sourceRef="gateway_TPM_Error_Alert_Article_Workflow_InCopy_Generation_Failed"
                    targetRef="TPM_Final_Edit">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "TPM_Final_Edit"}]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow sourceRef="gateway_TPM_Error_Alert_Article_Workflow_InCopy_Generation_Failed"
                    targetRef="EndNode">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${target == "EndNode"}]]></conditionExpression>
      </sequenceFlow>
      <exclusiveGateway id="DOCX_Load_Failed_"/>
      <sequenceFlow sourceRef="DOCX_Load_Failed_"
                    targetRef="TPM_Error_Alert_Article_Workflow_Docx_Load_Failed">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${EXCEPOTION_OCCUR=='true' == true]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow sourceRef="DOCX_Load_Failed_" targetRef="Capture_DOCX_MO_ID">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${EXCEPOTION_OCCUR=='true' == false]]></conditionExpression>
      </sequenceFlow>
      <userTask id="TPM_Error_Alert_Article_Workflow_Docx_Load_Failed"
                name="TPM Error Alert: Article Workflow: Docx Load Failed"
                activiti:candidateGroups="Managing Editor">
         <documentation>Load of file ${fullFileName} failed: ${exceptionMessage}</documentation>
      </userTask>
      <sequenceFlow sourceRef="TPM_Error_Alert_Article_Workflow_Docx_Load_Failed"
                    targetRef="EndNode"/>
      <exclusiveGateway id="DITA_Load_Failed_"/>
      <sequenceFlow sourceRef="DITA_Load_Failed_"
                    targetRef="TPM_Error_Alert_Article_Workflow_XML_Load_Failed">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${EXCEPTION_OCCUR=='true' == true]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow sourceRef="DITA_Load_Failed_" targetRef="Set_Tax">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${EXCEPTION_OCCUR=='true' == false]]></conditionExpression>
      </sequenceFlow>
      <userTask id="TPM_Error_Alert_Article_Workflow_XML_Load_Failed"
                name="TPM Error Alert: Article Workflow: XML Load Failed"
                activiti:candidateGroups="Managing Editor">
         <documentation>Load of DITA XML from DOCX ${fullFileName} failed: ${exceptionMessage}&lt;br/&gt;File also exported to ${sharedExportDir} &lt;br/&gt;See validation report &lt;a href='/rsuite/rest/v1/report/generated/${validationReportId}?skey=RSUITE-SESSION-KEY' target='_xformReport'&gt;${validationReportFileName}&lt;a/&gt;</documentation>
      </userTask>
      <sequenceFlow sourceRef="TPM_Error_Alert_Article_Workflow_XML_Load_Failed"
                    targetRef="Clear_Load_Dita_Status"/>
      <userTask id="TPM_Finalize_Issue"
                name="TPM Finalize Issue"
                activiti:candidateGroups="Associate Editor">
         <documentation>Article ${sourceFileName}: Bluelines have been approved. Workflow is complete.</documentation>
      </userTask>
      <sequenceFlow sourceRef="TPM_Finalize_Issue" targetRef="EndNode"/>
      <serviceTask id="Set_Variables_From_Properties"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.SetGlobalVariablesActionHandler">
<!--Custom variable; adjust action handlers as appropriate. variableNames={exportDir;sharedExportDir}-->
<!--Custom variable; adjust action handlers as appropriate. values={${astd.base.export.dir}${astd.xml.export.dir}/${pId};${astd.export.share}${astd.xml.export.dir}/${pId}}--></serviceTask>
      <sequenceFlow sourceRef="Set_Variables_From_Properties"
                    targetRef="Validate_File_Name"/>
      <serviceTask id="Get_PID_and_Now_String"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.SetDynamicValuesToVariablesActionHandler">
<!--Custom variable; adjust action handlers as appropriate. variableNames={pId;nowString}-->
<!--Custom variable; adjust action handlers as appropriate. items={pId;nowString}--></serviceTask>
      <sequenceFlow sourceRef="Get_PID_and_Now_String"
                    targetRef="Set_Variables_From_Properties"/>
      <serviceTask id="Capture_DOCX_MO_ID"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.SetVariableFromMoWorkflowList">
<!--Custom variable; adjust action handlers as appropriate. targetVariableName={docxMoId}--></serviceTask>
      <sequenceFlow sourceRef="Capture_DOCX_MO_ID" targetRef="Is_Unknown_DOCX_"/>
      <serviceTask id="Capture_Article_CA_MO_ID"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.SetVariableFromMoWorkflowList">
<!--Custom variable; adjust action handlers as appropriate. targetVariableName={articleCaMoId}--></serviceTask>
      <sequenceFlow sourceRef="Capture_Article_CA_MO_ID" targetRef="Set_Article_LM"/>
      <serviceTask id="Make_Article_CA_Current"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.SetWorkflowMoListFromVariable">
<!--Custom variable; adjust action handlers as appropriate. moSpecifyingVariableName={articleCaMoId}--></serviceTask>
      <sequenceFlow sourceRef="Make_Article_CA_Current" targetRef="TPM_Begin_Design"/>
      <serviceTask id="Make_XML_Current"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.SetWorkflowMoListFromVariable">
<!--Custom variable; adjust action handlers as appropriate. moSpecifyingVariableName={xmlMoId}--></serviceTask>
      <sequenceFlow sourceRef="Make_XML_Current" targetRef="Export_Article_HTML"/>
      <serviceTask id="Restore_Article_CA_After_Exports"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.SetWorkflowMoListFromVariable">
<!--Custom variable; adjust action handlers as appropriate. moSpecifyingVariableName={articleCaMoId}--></serviceTask>
      <sequenceFlow sourceRef="Restore_Article_CA_After_Exports"
                    targetRef="TPM_Finalize_Issue"/>
      <sequenceFlow sourceRef="" targetRef="Clear_HTML_Export_Status"/>
      <serviceTask id="Import_DITA"
                   activiti:class="com.reallysi.rsuite.workflow.actions.TopicImporterActionHandler">
<!--Custom variable; adjust action handlers as appropriate. topicPath={${exportDir}/${sourceFileName}/${sourceFileName}.xml}-->
<!--Custom variable; adjust action handlers as appropriate. parentCaId={${articleCaMoId}}-->
<!--Custom variable; adjust action handlers as appropriate. commitMessage={Loaded via workflow from hotfolder}-->
<!--Custom variable; adjust action handlers as appropriate. importedMoListVarname={xmlMoId}-->
<!--Custom variable; adjust action handlers as appropriate. topicContainerName={media}--></serviceTask>
      <sequenceFlow sourceRef="Import_DITA" targetRef="DITA_Load_Failed_"/>
      <serviceTask id="Clear_HTML_Export_Status"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.ClearExceptionStatus"/>
      <sequenceFlow sourceRef="Clear_HTML_Export_Status"
                    targetRef="Restore_Article_CA_After_Exports"/>
      <serviceTask id="Set_Article_LM"
                   activiti:class="com.reallysi.service.workflow.ingestion.action.AddLayeredMetadataActionHandler">
<!--Custom variable; adjust action handlers as appropriate. metadataName={ca-type;article-process-id}-->
<!--Custom variable; adjust action handlers as appropriate. metadataValue={article;${pId}}-->
<!--Custom variable; adjust action handlers as appropriate. moList={${articleCaMoId}}--></serviceTask>
      <sequenceFlow sourceRef="Set_Article_LM" targetRef="TPM_Edit_MS_Word"/>
      <serviceTask id="Clear_Load_Dita_Status"
                   activiti:class="com.reallysi.rsuite.system.workflow.actions.ClearExceptionStatus"/>
      <sequenceFlow sourceRef="Clear_Load_Dita_Status" targetRef="TPM_Final_Edit"/>
      <serviceTask id="Get_Tax"
                   activiti:class="com.astd.rsuite.actions.AstdSetClassificationVar">
<!--Custom variable; adjust action handlers as appropriate. moAlias={${sourceFileName}.xml}-->
<!--Custom variable; adjust action handlers as appropriate. targetVariableName={articleClassification}--></serviceTask>
      <sequenceFlow sourceRef="Get_Tax" targetRef="DocX2XML_Transform"/>
      <serviceTask id="Set_Tax"
                   activiti:class="com.astd.rsuite.actions.AstdSetMoClassification">
<!--Custom variable; adjust action handlers as appropriate. moAlias={${sourceFileName}.xml}-->
<!--Custom variable; adjust action handlers as appropriate. data={${articleClassification}}--></serviceTask>
      <sequenceFlow sourceRef="Set_Tax" targetRef="Set_Tax_Failed_"/>
      <exclusiveGateway id="Set_Tax_Failed_"/>
      <sequenceFlow sourceRef="Set_Tax_Failed_" targetRef="XML_to_INCX">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${EXCEPTION_OCCUR==true == false]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow sourceRef="Set_Tax_Failed_"
                    targetRef="TPM_Error_Alert_Article_Workflow_XML_Load_Failed">
         <conditionExpression xsi:type="tFormalExpression"><![CDATA[${EXCEPTION_OCCUR==true == true]]></conditionExpression>
      </sequenceFlow>
   </process>
</definitions>
